{"pages":[],"posts":[{"title":"","text":"图像化 GIT 管理工具推荐 more detail 一、TortoiseGitGit这种分布式版本控制系统最适合的就是单枪匹马搞开发的选手，不需要服务器，下载个 git 和图形工具，网速快十分钟就能搞定开始愉快的开发工作。我在搭建 gitlab 服务器时，查找了许多关于 git 的使用教程，他们中大多数都是使用命令行来操作，非常的专业，灵活。但 git 再怎么吹的玄乎完爆 SVN，它终究只是一个工具而已，工具首先要满足需求，第二就是要好用，显然命令行是没有图形界面好用的。在 Windows 上的图形工具当然是小乌龟（TortoiseGit）最好用了，Mac 则上 SourceTree。关于的 Git 的教程可以去看廖雪峰老师关于 git 的教程。 1.TortoiseGit 的基本操作当你第一次使用 TortoiseGit 的时候，首先要确认你的身份，这样你提交的修改其他成员才知道是谁做出的修改，如果有问题该向谁询问，确认身份，右键–&gt;TortoiseGit–&gt;Setting,在打开的对话框里,左边选 git,右边就会出现写用户名和邮箱的地方。（官网上面有中文语言包，安装主程序之后安装即可）这是已经设置好的状态，之后就可以进行 clone 等其他操作了。 二、Source TreeSourceTree是老牌的 Git GUI 管理工具了，也号称是最好用的 Git GUI 工具。我的体验是确实强大，功能丰富，基本操作和高级操作都设计得非常流畅，适合初学者上手。 1.特点– 免费– 功能强大：无论你是新手还是重度用户，SourceTree 都会让你觉得很顺手。对于非常重度用户，Source Tree 还支持自定义脚本的执行。– 同时支持 Windows 和 Mac 操作系统– 同时支持 Git 和 Mercurial 两种 VCS– 内置 GitHub, BitBucket 和 Stash 的支持：直接绑定帐号即可操作远程 repo","link":"/2021/01/04/du8dhm/"},{"title":"","text":"1.全国电视直播**全国电视直播**是最近发现的一个非常良心的电视直播网站；它支持几百个电视直播的网站，包括：港澳台卫视；网站界面简洁，没有任何广告，并且播放速度和加载速度非常之快，画质也是十分高清；总体体验非常不错的一个网站。 2.wikihow**wikiHow**是一个综合技能搜索网站，不管生活中，工作中，遇到不会的东西，你都可以利用这个网站搜索。它上面还免费提供了很多生活，工作小技巧，并且包含不同的专业，不同的方面；总之，各种不会的技能，先用这个网站搜索。例如：如何将图片转换成 PDF，如何清洁电脑显示器，如何给 iPhone 添加铃声，如何在忘记密码的情况下打开电脑，如何在 Excel 中制作工资表等等技巧；这个网站全部提供。 3.Toolfk 在线工具箱**Toolfk 在线工具箱**是一款程序员工具箱，包含几十个实用的工具。它包括的工具有：在线生成二维码 Qrcode，Linux 常用命令大全，在线思维导图工具，在线数据库设计工具，PHP 代码在线运行，Python 代码在线运行，JavaScript 在线工具箱，CSS 在线工具箱，JSON 在线工具箱，Markdown 在线工具箱，在线 SQL 转换工具，在线加密工具箱，进制在线转换等等。 4.拷贝兔**拷贝兔**是一款跨平台文件传输工具，支持 Windows、Mac、Linux、iOS、Android 平台互传；在线使用，用完即走。它可以实现不同设备间文件或文本的临时性快速分享，你可以在几秒中内可以在 Windows、Mac、Linux、iOS、Android 等各种有浏览器的设备间完成原先耗时且繁琐的分享操作。 5.疯狂影视搜索**疯狂影视搜索**是一个界面简洁但是功能强大的电影搜索网站。它首先界面也是十分简洁，十分清新，只有一些热门的影视推荐；但是它的功能十分强大；直接输入你要搜索的影视的名字，它会出来很多不同的搜索结果，然后你点击任意结果，它会跳转到不同的影视网站直接观看或者下载；这样子，你就轻松的找到了你需要 6.临时邮箱**临时邮箱**是一款帮助我们解决某些网站需要使用到我们自己的真实邮箱，但是我们又不想暴露我们的邮箱的工具。它不需要注册，并且它的邮箱持续 24 小时，比十分钟邮箱保持时间更长，可以任意设置邮箱名，随时更换邮箱；一款个人认为十分实用的工具。 7.奶牛快传**奶牛快传**是一款无需注册即可使用的大文件临时传输服务，未注册用户支持最大 2GB 文件，72 小时保存时效，登录后无限文件大小，168 小时保存时效。国内线路，速度飞快。 奶牛快传是一个连广告都很漂亮的服务，上图是他们首页的直接截图，右侧大方块是一个奇怪的广告，也可能不是广告，配合可变色的背景以及漂亮的设计，在电脑上看起来很舒服。主要功能就是无需注册直接上传文件，类似服务在国外很流行，但由于带宽成本以及监管问题，这类服务在国内极少。未登录的 奶牛快传 支持最大 2Gb，保存 72 小时，可以通过下载者登录来延长保存时间，登录用户（仅支持微信登录）不限文件大小，保存时限也增加到 168 小时。支持一次性上传多个文件，可以设置下载密码。自带分享二维码，微信扫码后可直接打开，但建议还是使用浏览器打开后再下载。注册用户还可以在后台看到传输历史，包括文件列表、大小、下载次数，以及支持预览文件。奶牛快传还有付费的 Pro 账号，支持自定义页面二级域名，以及保存实现保留至 Pro 账号到期日。第一印象好感度不错，给个好评。 8.腾讯智图 智图是腾讯 ISUX 前端团队开发的一个专门用于图片压缩和图片格式转换的平台，其功能包括针对 png,jpeg,gif 等各类格式图片的压缩，以及为上传图片自动选择最优的图片格式。同时，智图平台还会为用户转换一份 webp 格式的图片。","link":"/2021/01/04/es2d56/"},{"title":"","text":"解决 Mac 和 iPhone 接力无法正常使用的方法。 操作方法第一种 iPhone 关闭 Wi-Fi 蓝牙 接力 关机（不是重启） Mac 同 iPhone 开机，在 iPhone 和 Mac 上把之前关闭的都打开。 第二种在其中一台设备上退出登录另一台设备的 iCloud，或者去 iCloud 网页上退出登录。最后重新登录。","link":"/2021/01/04/fmlctk/"},{"title":"","text":"一、准备工作1. 引导文件：DS3617xs 6.1 Jun’s Mod V1.02b.img2. 写盘工具：Roadkil’s DiskImage3. 系统镜像：DSM_DS3617xs_15152.pat4. 镜像转虚拟硬盘：StarWind V2V Image Converter二、制作引导启动盘a)直接使用软件 StarWind V2V Image Converter 转换成引导盘根据自己需求选择，因为我们是访问的本地文件转换成虚拟机用磁盘，所以第一步选择本地文件选项，并找到本地镜像即可由于我们是需要 VMware 客户端用的虚拟磁盘文件，所以这里选择第一项即可（不同需求可以选择相应选项）完成即可得到需要的磁盘镜像 b)利用 cmd 命令创建虚拟磁盘并进行写盘操作1.打开 cmd 命令窗，执行以下命令：1）diskpart2）create vdisk file=F:\\synoboot.vhd maximum=256 type=expandable3）attach vdisk4）create partition primary5）exit ** 注意：生成的虚拟磁盘不用格式化！！！**另需注意第二步中的”F：”为本地硬盘的盘符 “.vhd”为虚拟硬盘镜像的格式 “256”为制作的虚拟硬盘镜像大小 请根据实际需求填写 此时你可以打开磁盘管理，确认看到创建的这个虚拟磁盘： 这个时候，在“我的电脑”里面是看不到这个盘的，另外再重申一下，不需要给这个盘格式化，也不需要分配盘符 2.写入 img 文件到虚拟磁盘，完成黑群晖启动引导的制作使用工具 Roadkil’s DiskImage 将文件 DS3617xs 6.1 Jun’s Mod V1.02b.img 写入到刚刚创建的虚拟磁盘中。步骤如下图： ** 注意 **根据容量大小判断虚拟磁盘，写盘会擦除数据，选错磁盘会造成数据损失 PS：如果你是要在实体机中安装黑群晖，可以用同样的方法将 img 文件写入到 U 盘（注意驱动器选择对应的 U 盘）中即可使用。然后将 U 盘插入到主机上，开机启动设置 U 盘启动，就可以正常安装黑群晖。 3.分离虚拟磁盘在磁盘管理界面里，鼠标右键点击刚刚创建的虚拟磁盘，然后执行 “分离 VHD”，将该虚拟磁盘分离掉。此时你可以到硬盘中将该文件 “synoboot.vhd” 随意拷贝传播给朋友、备份，当然也可以直接删除掉。这个文件则是制作好的启动盘镜像。PS2:群晖引导（需翻墙）","link":"/2021/01/04/gt6w4r/"},{"title":"","text":"一、准备工具1. U 盘一个（理论上容量大于引导镜像文件大小即可）推荐 2G-4G 闲置 U 盘2. DiskGenius_v5.1.0.653磁盘修复分区工具，此处仅用来读取 Windows 无法查看的文件，版本无严格需求3. 芯片无忧_v1.630（ChipEasy）U 盘芯片检测软件，用于查看 U 盘的 VID,PID4. 镜像写入软件(Win32_Disk_Imager) or Roadkil’s DiskImage 若下载链接失效，自行百度即可5. 引导镜像 DS3615xs_5.16. DSM 系统文件 DS3615xs_50557. Notepad++_v7.6.3_x64 便携版 or Notepad++_v7.6.3_x86 便携版注意1. 使用上文中提供的虚拟机用的引导镜像也可以正常引导；2. 引导镜像和系统一定要一一对应；3. 成功安装系统后，慎重升级谨防变砖！！！二、下面开始启动 U 盘制作1. 把 U 盘插入运行 Windows 系统个电脑上，打开’芯片无忧’软件（Windows10 中该软件运行速度较慢请等待 不要操作，如操作了会提示停止运行）找到你 U 盘的标识并记录 VID,PID 2. 打开 win32DiskImager（或 Roadkil’s DiskImage）软件将系统引导文件（就是 img 后缀的文件）写入 U 盘选择无误之后点击 Write 写入，完成即可进入下一步选择 U 盘的时候，选前缀是 Physical Disk(物理磁盘)，而不是 Drive(驱动器)；选择无误之后，点击开始，完成后进入下一步 3. 打开 DiskGenius 软件，找到你 U 盘，单击 grub 分区，然后去右侧浏览文件里找到 grub.cfg 文件 4. 用 Notepad++打开 grub.cfg 文件，修改文件内 VID,PID 为第一步记录的 VID,PID；保存 5.用修改完的 grub.cfg 文件替换原文件 6. 打开 DiskGenius 软件并找到你 U 盘，找到 grub 分区，右击给 grub 分区分配盘符(Windows 无法读取没有盘符的分区)；打开资源管理器会出现一个新的分区，盘符为刚分配的盘符 7. 进入驱动器目录 /grub/ 找到 grub.cfg 文件 使用 Notepad++（推荐）或记事本打开 8. 用 Notepad++打开 grub.cfg 文件，修改文件内 VID,PID 为第一步记录的 VID,PID；保存即可9. 3-5 步或 6-8 步选择一种即可10. 将制作好的 U 盘插入需要做 NAS 的电脑，主板设置 U 盘引导启动电脑，开机；启动盘制作成功并正常工作后显示界面如下： 11. 进入http://fing.synology.com进行系统安装即可（参考上篇安装Synology）","link":"/2021/01/04/gve6uw/"},{"title":"","text":"GitHub 在国内正常拉取速度感人，有时候科学上网也是一样的，网上看到这个方法试了一下挺管用的。 一、获取 GitHub 官方 CDN 地址打开这个地址来获取 GitHub 官方 CDN 地址。 在输入框输入以下三个链接查询的 DNS 解析地址 github.com assets-cdn.github.com github.global.ssl.fastly.net 二、修改系统 Hosts 文件打开系统 hosts 文件(需管理员权限)，路径：C:\\Windows\\System32\\drivers\\etc在末尾添加刚刚查到的三行记录并保存。(需管理员权限，注意 IP 地址与域名间需留有空格，如图所示) 三、刷新系统 DNS 缓存Windows+X 打开系统命令行（管理员身份）或 powershell运行 ipconfig /flushdns 手动刷新系统 DNS 缓存。 四、大功告成","link":"/2021/01/04/lwnkb1/"},{"title":"","text":"使用 npm-check-updates 升级插件，更新后会自动修改 package.json 里的版本号，简单方便。 1.安装 npm-check-updates 插件1npm install -g npm-check-updates 补充说明：npm install -g 插件名是安装全局插件，版本号会到全局目录里的 package.json 中去npm install 插件名是安装项目文件夹插件，版本号会到当前所在项目文件夹的 package.json 中去 2.使用 npm-check-updates 插件12ncu # 查看需要更新ncu -u # 更新全部 错误问题 查看更新 nuc 命令出错，可以用 ncu –loglevel verbose –packageFile package.json ncu -u 更新出错可以用 ncu -u –packageFile package.json，之后用 npm install 来更新插件","link":"/2021/01/04/mwmly2/"},{"title":"","text":"一、创建 VMWare 虚拟机请使用 vmware 12.5.2 以后的版本，因为之前的版本不支持虚拟磁盘（.VHD）每一步的操作步骤已经记录，可根据一下图片步骤操作（VMware 版本为 15.0.2）至此，已经完成虚拟机用的黑群晖引导的添加，启动虚拟机然后是短暂的等待后，你就可以看到下面截图的屏幕，中间你不需要做任何操作；如果你看到这个提示，直接选 “否” 忽略即可这个时候，相当于群晖已经正常启动，你可以在打开浏览器，输入 http://find.synology.com ，如果你的虚拟机网段和主机是同一个网段，使用这个网址是可以直接获取到我们将要安装的群晖的。 你也可以使用群晖官方提供的 “群晖助手” 来安装群晖（这个工具很简单，这里不做赘述） 群晖助手官方下载 二、安装群晖系统虚拟机的 IP 地址，网卡信息都显示出来了，点击 “联机” 继续，然后继续下一步选择 “手动安装” ，浏览我们下载好的系统文件 DSM_DS3617xs_15152.pat，然后执行 “立即安装” 确定后继续，然后就是等待，，，后续步骤按提示操作即可，其中有一步让你输入群晖账户的，这个地方点击下面的“跳过此步骤” 即可，其他没有什么特别要说明的，最后群晖就安装完成了。 以上，虚拟机的黑群晖安装完成","link":"/2021/01/04/vayo0m/"},{"title":"","text":"macOS 使用官方提供的工具可以无需密码进行卸载。 在官方文档里，会有详细的结束使用方法，运行程序拖到到页面最下方就可以看到。 运行方法 解压下载的 SymantecRemovalTool。 打开终端进入解压后的目录，输入命令（-A 是全部卸载）。 1./SymantecRemovalTool.command -A 运行完成之后重启。 Windows 使用 CleanWipe 可以无需密码进行卸载。 在官方文档里，会有详细的结束使用方法，运行程序拖到到页面最下方就可以看到。","link":"/2021/01/04/vcewhw/"},{"title":"","text":"语雀和 Hexo 之前都有单独使用过，都很舒服，今天偶然看到一篇大佬的文章，居然可以把这两个结合起来使用，这岂不是美滋滋，爽歪歪，所以说心动不如行动，搞起来~~~在实施的过程中，由于自己太菜，有好多坑，搞了好长时间才搞好，不容易，写这样一个文章记录一下 一、所需环境 1.操作系统最好 Linux，若在 Windows 中就装一下虚拟机 2.所需环境软件 Git Node.Js Hexo Ruby 二、实现步骤利用Hexo+Github+Triavs-ci来实现在语雀上面写着之后自动部署到 Hexo 上面去，这么做只能用舒服来形容，嘻嘻！ 1.介绍1）Hexo要怎么来部署就不要我在这多说什么了，我的博客有这样的教程，附上我的博客地址。 2）Github作为一个程序猿必备，略过，没有的，嗯哼，可以不用看了。 3）Triavs-ci开源持续集成构建项目，它与 jenkins 有点像，可以直接用你的 Github 账号登录，同步你的仓库，很是方便，页面也比较简洁好看。 4）yuque-hexo一个 Hexo 的插件，看名字就知道用来干什么的了，所以你猜的没有错，他就是用来同步语雀到 Hexo 的插件，这是开源插件，附上开源库地址。感谢大佬的插件。使用起来也很简单就只需要安装好在 package.json 配置一下就好了。还在配置一下命令，不然编译生成的时候不会同步语雀的文章，也在 package.json 文件中配置具体可以参考我的package.json文件 2.操作流程1）配置 Hexo这里简单说一下要注意的地方，具体教程网上有很多。 增加hexo-deployer-git依赖，防止部署时报错。 1npm install --save hexo-deployer-git 增加hexo-util到dev依赖，防止 travis 的 npm 版本&lt;3,出现的Error: Cannot find module 'hexo-util'错误。 1npm install --save-dev hexo-util 2）配置 Github 在 Github 上面建两个库（也不一定要两个，也可以利用两个代码分支来进行，我这里用两个仓库做栗子） 一个仓库拥来存放 Hexo 编译前的代码库。另一个用来存放编译后用来开启 Pages 的仓库。在本地创建好的 Hexo 可以提交到源码的仓库了。可以也把 Pages 的也配置好。 3）配置 Travis CI 第一步我们需要有一个 Travis-CI 的账号，直接进入Travis-CI官网，用自己的 Github 账号授权登录即可。 然后可以看到当前账号的所有代码仓库，接下来将博客项目的状态设置为启用。 第二步创建一个部署在 Travis CI 上面的 SSH key 利用这个 SSH key 可以让 Travis CI 向我们自己的项目提交代码(也就是将博客部署到 Page)。这如果你在之前部署 Hexo 的时候已经创建过了，就可以直接用那个公钥来添加到 Github 里面去，添加好之后大概就是图片上的样子。 这里提一下，有的时候你的本地向 GitHub 提交提交不上去，但之前还是可以的，这时候可以检查 GitHub 的 SSH 密钥这里，可能是因为安全问题，官方给你暂时冻结了这个密钥，冻结的情况下这里的 Delete 旁边就会多一个激活按钮，点一下就好了。 第三步加密私钥 加密密钥的时候一定要在 Linux 操作系统下进行，不然 travis-ci 之后进行解密的时候会报错，目前官方就是这样的一个 BUG，暂时无解。Windows 的同学可以在 Linux 虚拟机中把你的 Hexo 源码仓库 clone 进行下面的操作。 这里还需要 Ruby 来支撑，所以还需安装 Ruby，有几种方式，个人推荐还是老老实实编译安装最好 下载 ruby 下载最新版的 Ruby 压缩文件。请点击这里下载。也可以使用 wget 命令 - 下载 Ruby 之后，解压到新创建的目录下： 12$ tar -xvzf ruby-2.2.3.tgz$ cd ruby-2.2.3 - 现在，配置并编译源代码，如下所示： 123$ ./configure$ make$ sudo make install - 装后，通过在命令行中输入以下命令来确保一切工作正常： 123$ruby -vruby 2.2.3…… 如果一切工作正常，将会输出所安装的 Ruby 解释器的版本，如上所示。如果您安装了其他版本，则会显示其他不同的版本。 安装 travis（如果在国内的网络环境下建议安装之前先换源) 1$ gem install travis 那么之前把公钥文件配置好了，然后现在就要配置私钥文件，在 hexo 项目下面建立一个 .travis 的文件夹来放置需要配置的文件和 travis 的配置文件 travis.yml。Windows 和 Linux 下无法创建和创建报错可以用命令mkdir ./.travis进行创建文件夹，用命令touch ./.travis.yml来创建 travis 的配置文件。切换到.travis 文件夹下 用命令行工具登录： 1travis login --auto 这时候会让你输入你的 Github 账号（邮箱）和密码，也可以使用 GitHub 的 Token 来进行登录 1travis login --github-token 具体的Token --auto 然后将私钥 id_rsa 复制到 .travis 文件夹，用命令行工具进行加密： 1$ travis encrypt-file id_rsa --add 这时候在之前创建好的.travis.yml 文件里面就会被写入一些密钥的信息，大概如此：在你的 Travis 的项目设置中也会出现密钥 接下来就要配置 .travis.yml 首先我们要改一下生成的解密信息，因为这个里面的 in 和 out 的文件位置是相对于本地环境来生成的，如果在 Travis 上面跑的时候位置会发生变化这样运行的时候就会报错，改完之后大概这样子： 为了让 git 默认连接 SSH 还要创建一个 ssh_config 文件。在 .travis 文件夹下创建一个 ssh_config 文件，输入以下内容： 12345Host github.com User git StrictHostKeyChecking no IdentityFile ~/.ssh/id_rsa IdentitiesOnly yes 这样，当向项目 push 代码的时候 travis CI 就会根据 .travis.yml 的内容去部署我们的项目了。具体可以参考我的.travis.yml文件这里要提一下，我们在向 Hexo 源码仓库 Push 的时候不要提交本地编译生成的 node_modules 文件夹，不然到时候在上面跑的时候会有权限问题，npm 会根据 package.json 上面的信息自己下模块的，所以不用当选，具体的涉及到 npm 的运行原理这里不提了，想了解的可以自行百度哈。** 4）配置 Serverless 服务目前阿里云和腾讯云都有 serverless 服务，免费的额度完全够用了，下面介绍一下腾讯云如何配置 创建函数 serverless 函数配置 点击完成即可，之后在配置具体函数代码示例： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091&lt;?phpfunction main_handler($event, $context) { // 解析语雀post的数据 $update_title = ''; if($event-&gt;body){ $yuque_data= json_decode($event-&gt;body); $update_title .= $yuque_data-&gt;data-&gt;title; } // default params $repos = ''; // 你的仓库id 或 slug $token = ''; // 你travis-cide的登录token $message = date(&quot;Y/m/d&quot;).':更新啦:'.$update_title; // 你这里是更新信息可自定义 $branch = 'master'; // 你GitHub分支 // post params $queryString = $event-&gt;queryString; $q_token = $queryString-&gt;token ? $queryString-&gt;token : $token; $q_repos = $queryString-&gt;repos ? $queryString-&gt;repos : $repos; $q_message = $queryString-&gt;message ? $queryString-&gt;message : $message; $q_branch = $queryString-&gt;branch ? $queryString-&gt;branch : 'master'; echo($q_token); echo('==='); echo ($q_repos); echo ('==='); echo ($q_message); echo ('==='); echo ($q_branch); echo ('==='); //request travis ci $res_info = triggerTravisCI($q_repos, $q_token, $q_message, $q_branch); $res_code = 0; $res_message = '未知'; if($res_info['http_code']){ $res_code = $res_info['http_code']; switch($res_info['http_code']){ case 200: case 202: $res_message = 'success'; break; default: $res_message = 'faild'; break; } } $res = array( 'status'=&gt;$res_code, 'message'=&gt;$res_message ); return $res;}/** @description travis api , trigger a build* @param $repos string 仓库ID、slug* @param $token string 登录验证token* @param $message string 触发信息* @param $branch string 分支* @return $info array 回包信息*/function triggerTravisCI ($repos, $token, $message='yuque update', $branch='master') { //初始化 $curl = curl_init(); //设置抓取的url curl_setopt($curl, CURLOPT_URL, 'https://api.travis-ci.org/repo/'.$repos.'/requests'); //设置获取的信息以文件流的形式返回，而不是直接输出。 curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1); //设置post方式提交 curl_setopt($curl, CURLOPT_CUSTOMREQUEST, &quot;POST&quot;); //设置post数据 $post_data = json_encode(array( &quot;request&quot;=&gt; array( &quot;message&quot;=&gt;$message, &quot;branch&quot;=&gt;$branch ) )); $header = array( 'Content-Type: application/json', 'Travis-API-Version: 3', 'Authorization:token '.$token, 'Content-Length:' . strlen($post_data) ); curl_setopt($curl, CURLOPT_HTTPHEADER, $header); curl_setopt($curl, CURLOPT_POSTFIELDS, $post_data); //执行命令 $data = curl_exec($curl); $info = curl_getinfo($curl); //关闭URL请求 curl_close($curl); return $info;}?&gt; 这里有几个需要获取的参数： travis 登录 token，在 travis-ci.org 中设置界面获取： - 仓库ID 或 扩展名 使用 findder 或者 postman 发起一个请求： 1https://api.travis-ci.org/owner/github用户名/repos 配置触发方式 一般会得到这么个 api：https://service-8x9gl1u7-1258196125.ap-shanghai.apigateway.myqcloud.com/release/yuque-hexo 5）配置语雀配置一个仓库（公开的仓库）的 webhook:可以选择所有更新触发或者主动触发，主动触发的意思即发布需要勾选一个选项才会触发 webhook。具体可参见语雀文档；将 serverless 生成的 api 填入,可以在链接后面带参数： 12345678token 登录tokenrepos 仓库idmessage 提交信息branch 分支示例：https://service-8x9gl1u7-1258196125.ap-shanghai.apigateway.myqcloud.com/release/yuque-hexo?repos=xxx&amp;token=xxx&amp;message=xxx&amp;branch=xxx 如果不在链接带参数则写在 serverless 函数内。 6）配置语雀 token–可选操作这一步操作是针对于语雀仓库是私人仓库的情况，并且只对 yuque-hexo 插件版本为 1.6.0 及其以后生效 a.获取个人语雀 token首先获取到你的个人 token，这个在个人语雀账号设置里面新建一个就好了，填写好名字和勾选之后点击创建即可，之后就可以在 token 页面点击就可查看具体的 token 值。 b.使用 token 安装 cross-env 插件（兼容不同系统设置环境变量），安装命令： npm install cross-env错误：出现 fsevents 插件报错，fsevents 不在 package.json 里，但是仍然安装了，是因为你的系统是 Windows 系统，fsevents 是苹果系统的可选依赖,你的项目有可能是团队项目，别人在他的 mac 上安装了 fsevents 相关依赖库，所以到这边你也就安装到你的 windows 上边了。你可以检查你的 package.json 文件中是不是有 fsevents 相关依赖，删除即好！如果没有，其他的 npm 包也会有依赖 fsevents 的！！！这是 warning 错误，是因为 mac 下需要 fsevents，这里是在 windows 环境，所以可以忽略这个警告，对你没什么影响的。 设置环境变量 在 Travis 的环境变量添加语雀的 token 更改.travis.yml 文件里的部署命令 12script: - cross-env YUQUE_TOKEN=$yuque_token npm run deploy 7）大功告成发布或者更新一篇文章后，我们前往 travis-ci,可以看到已经触发了一次构建请求：构建完成后，咱们的博客上已经妥妥的展示出来拉~ 参考资料Nero的语雀JoashZhao 的 GitHubJoashZhao 的博客","link":"/2021/01/04/qc85sy/"}],"tags":[{"name":"软件","slug":"软件","link":"/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"网站","slug":"网站","link":"/tags/%E7%BD%91%E7%AB%99/"},{"name":"群晖","slug":"群晖","link":"/tags/%E7%BE%A4%E6%99%96/"},{"name":"折腾","slug":"折腾","link":"/tags/%E6%8A%98%E8%85%BE/"},{"name":"小技巧","slug":"小技巧","link":"/tags/%E5%B0%8F%E6%8A%80%E5%B7%A7/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"npm","slug":"npm","link":"/tags/npm/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"}],"categories":[{"name":"软件","slug":"软件","link":"/categories/%E8%BD%AF%E4%BB%B6/"},{"name":"教程","slug":"教程","link":"/categories/%E6%95%99%E7%A8%8B/"},{"name":"Hexo","slug":"Hexo","link":"/categories/Hexo/"}]}